version: '3.1'
services:
  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=45d'
    volumes:
      - /etc/hosts:/etc/hosts
      - ./conf/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./conf/prometheus-rules.yml:/etc/prometheus/prometheus-rules.yml
      - prometheus_data:/prometheus

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    restart: always
    volumes:
      - ./conf/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    # command: --config.file=/etc/alertmanager/alertmanager.yml --log.level=debug
    ports:
      - 9093:9093

  grafana:
    image: grafana/grafana:9.1.2
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./conf/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./conf/nginx/conf.d:/etc/nginx/conf.d
      - ./conf/nginx/ssl/:/etc/nginx/ssl/

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data: